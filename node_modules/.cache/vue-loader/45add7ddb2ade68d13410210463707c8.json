{"remainingRequest":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kevin/Projects/lifesparkv1/src/components/Demo/ChartAPI.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kevin/Projects/lifesparkv1/src/components/Demo/ChartAPI.vue","mtime":1611287984079},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBMaW5lQ2hhcnQgZnJvbSAnQC9jaGFydHMvTGluZUNoYXJ0LmpzJwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdHcmFwaCcsCiAgY29tcG9uZW50czogewogICAgTGluZUNoYXJ0CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFjb2xsZWN0aW9uOiBudWxsLAogICAgICBjYXNlbGlzdDpbXSwKICAgICAgZGF0ZWxpc3Q6W10gICAgICAKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICAgdGhpcy5yZW5kZXJDaGFydCh0aGlzLmNoYXJ0ZGF0YSkKICB9LAogIGNyZWF0ZWQgKCkgewoKICAgIGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkub3BlbmNvdmlkLmNhL3RpbWVzZXJpZXM/c3RhdD1jYXNlcyZsb2M9T04nKQogICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhCiAgICAgICAgICAgdmFyIGk7CiAgICAgICAgCiAgICAgICAgICAgZm9yKGk9MDtpPGRhdGEuY2FzZXMubGVuZ3RoO2krKyl7CiAgICAgICAgICAgICAgdGhpcy5jYXNlbGlzdC5wdXNoKGRhdGEuY2FzZXNbaV0uY2FzZXMpCiAgICAgICAgICAgICAgdGhpcy5kYXRlbGlzdC5wdXNoKGRhdGEuY2FzZXNbaV0uZGF0ZV9yZXBvcnQpCiAgICAgICAgICAgfSAgICAgICAgIAogICAgICAgICAgIAogICAgICAgfSkKICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSksCgogICAgICB0aGlzLmRhdGFjb2xsZWN0aW9uLmNhc2VzCgoKICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbGxEYXRhICgpIHsKICAgICAgdGhpcy5kYXRhY29sbGVjdGlvbiA9IHsKICAgICAgICBsYWJlbHM6IHRoaXMuZGF0ZWxpc3QsCiAgICAgICAgZGF0YXNldHM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbGFiZWw6ICdEYXRhIE9uZScsCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmODc5NzknLAogICAgICAgICAgICBkYXRhOiB0aGlzLmNhc2VsaXN0CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICAgIAogICAgfQogCiAgfQoKfQoK"},{"version":3,"sources":["ChartAPI.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA","file":"ChartAPI.vue","sourceRoot":"src/components/Demo","sourcesContent":["<template>\n  <div class=\"small\">\n       <line-chart :chart-data=\"datacollection\"></line-chart> \n       <button @click=\"fillData()\">Generate</button>\n  </div>\n</template>\n\n<script>\n  import LineChart from '@/charts/LineChart.js'\n  import axios from 'axios'\n  \n\n  export default {\n    name: 'Graph',\n    components: {\n      LineChart\n    },\n    data () {\n      return {\n        datacollection: null,\n        caselist:[],\n        datelist:[]      \n      }\n    },\n    mounted() {\n       this.renderChart(this.chartdata)\n    },\n    created () {\n\n      axios.get('https://api.opencovid.ca/timeseries?stat=cases&loc=ON')\n          .then(res => {\n             const data = res.data\n             var i;\n          \n             for(i=0;i<data.cases.length;i++){\n                this.caselist.push(data.cases[i].cases)\n                this.datelist.push(data.cases[i].date_report)\n             }         \n             \n         })\n        .catch(error => console.log(error)),\n\n        this.datacollection.cases\n\n\n    },\n    methods: {\n      fillData () {\n        this.datacollection = {\n          labels: this.datelist,\n          datasets: [\n            {\n              label: 'Data One',\n              backgroundColor: '#f87979',\n              data: this.caselist\n            }\n          ]\n        }\n        \n      }\n   \n    }\n  \n  }\n  \n</script>\n\n<style>\n  .small {\n    max-width: 600px;\n    margin:  150px auto;\n  }\n</style>\n"]}]}