{"remainingRequest":"/home/kevin/Projects/LifeSpark/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kevin/Projects/LifeSpark/src/components/GoalCycle/GoalDailyHabits.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kevin/Projects/LifeSpark/src/components/GoalCycle/GoalDailyHabits.vue","mtime":1611289568873},{"path":"/home/kevin/Projects/LifeSpark/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kevin/Projects/LifeSpark/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IFZ1ZUNvb2tpZXMgZnJvbSAndnVlLWNvb2tpZXMnCmltcG9ydCBWdWUgZnJvbSAndnVlJwoKVnVlLnVzZShWdWVDb29raWVzKQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdHb2FsRGFpbHlIYWJpdHMnLApkYXRhKCl7IAogIHJldHVybiB7IAogICAgIGRhaWx5SGFiaXRMaXN0OltdLAogICAgIGRheXNMaXN0OltdLAogICAgIGhhYml0RGF5czpudWxsLAogICAgIGhhYml0UG9pbnRzOjAKICB9Cn0sCi8vTG9hZHMgRGFpbHkgSGFiaXRzIFJlbGF0ZWQgdG8gR29hbCBTZWxlY3RlZAogYXN5bmMgY3JlYXRlZCAoKSB7CiAgICAgLy9HZXQgWWVhciBhbmQgRGF0ZQogICAgIHZhciBkYXRlTm93ID0gbmV3IERhdGUoKTsKICAgICB2YXIgeWVhcj0gZGF0ZU5vdy5nZXRGdWxsWWVhcigpOwoKICAgICAvL0dvYWwgR2V0IHRoZSBIYWJpdHMgUmVmcmVuY2luZyBHb2FscwogICAgIGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4ODg4L2FwaS9oYWJpdHMnKQogICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXMuZGF0YQogICAgICAgICAgICAgdmFyIGk7IAoKICAgICAgICAgICAgLy9HZXQgRGFpbHkgR29hbHMgIFJlbGF0ZWQgR29hbHMgYW5kIGlzIGRhdGUgYmVmb3JlIGVuZCBvZiB0YXNrIGRhdGU/IAogICAgICAgICAgICBmb3IoaT0wO2k8ZGF0YS5sZW5ndGg7aSsrKXsKICAgICAgICAgICAgICAgICAgdmFyIHRhc2tkYXRlID0gbmV3IERhdGUoZGF0YVtpXS5IYWJpdEVuZERhdGUpOyAgICAgIAogICAgICAgICAgICAgICAgICBpZih0YXNrZGF0ZSA+PSBkYXRlTm93KXsKICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYWlseUhhYml0TGlzdC5wdXNoKGRhdGFbaV0pOwogICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICB9ICAgIAogICAgICAgICB9KQogICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKQoKfSwKIG1ldGhvZHM6ewogICAvLyBGdW5jdGlvbiBDb252ZXJ0cyBkYXRlcyB0byBEYXlzCiAgICBkYXRlVG9EYXlzKGRhdGUpewogICAgICAgIHZhciBkYXRlTm93ID0gbmV3IERhdGUoKTsKICAgICAgICB2YXIgdGFza2RhdGUgPSBuZXcgRGF0ZShkYXRlKTsKICAgICAgICBjb25zdCBvbmVEYXkgPSAyNCAqIDYwICogNjAgKiAxMDAwOyAvLyBob3VycyptaW51dGVzKnNlY29uZHMqbWlsbGlzZWNvbmRzCiAgICAgICAgcmV0dXJuICBNYXRoLnJvdW5kKE1hdGguYWJzKCh0YXNrZGF0ZSAtIGRhdGVOb3cpIC8gb25lRGF5KSk7CiAgICB9Cn0KCgp9Cg=="},{"version":3,"sources":["GoalDailyHabits.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"GoalDailyHabits.vue","sourceRoot":"src/components/GoalCycle","sourcesContent":["<template>\n<div class=\"container-fluid\">\n    <div v-for=\"n in dailyHabitList\" class=\"list-group\">\n          <div class=\"list-group-item list-group-item-action\">\n             <div  class=\"d-flex w-100 justify-content-between\">\n               <h6 class=\"mb-1\"> <b>{{n.habit}}</b> </h6>\n               <medium>Check Num: {{n.habitPoints}}</medium>\n               <small>Days: {{dateToDays(n.HabitEndDate)}}</small>\n             </div>\n          </div>     \n    </div>\n</div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport VueCookies from 'vue-cookies'\nimport Vue from 'vue'\n\nVue.use(VueCookies)\n\nexport default {\n  name: 'GoalDailyHabits',\ndata(){ \n  return { \n     dailyHabitList:[],\n     daysList:[],\n     habitDays:null,\n     habitPoints:0\n  }\n},\n//Loads Daily Habits Related to Goal Selected\n async created () {\n     //Get Year and Date\n     var dateNow = new Date();\n     var year= dateNow.getFullYear();\n\n     //Goal Get the Habits Refrencing Goals\n     axios.get('http://localhost:8888/api/habits')\n          .then(res => {\n             const data = res.data\n             var i; \n\n            //Get Daily Goals  Related Goals and is date before end of task date? \n            for(i=0;i<data.length;i++){\n                  var taskdate = new Date(data[i].HabitEndDate);      \n                  if(taskdate >= dateNow){\n                     this.dailyHabitList.push(data[i]);\n                  }                  \n             }    \n         })\n      .catch(error => console.log(error))\n\n},\n methods:{\n   // Function Converts dates to Days\n    dateToDays(date){\n        var dateNow = new Date();\n        var taskdate = new Date(date);\n        const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        return  Math.round(Math.abs((taskdate - dateNow) / oneDay));\n    }\n}\n\n\n}\n</script>\n\n<style>\n.list-group{\n  color:black;\n\n}\nh6{\n  color:black;\n}\n.mb-1{\n  color:black;\n}\nsmall{\n  color:black;\n}\n.list-group-item{\n  color:black;\n  font-size: 17px;\n}\n</style>\n"]}]}