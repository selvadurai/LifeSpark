{"remainingRequest":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kevin/Projects/lifesparkv1/src/components/GoalCycle/GoalDailyHabits.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kevin/Projects/lifesparkv1/src/components/GoalCycle/GoalDailyHabits.vue","mtime":1610682404657},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IFZ1ZUNvb2tpZXMgZnJvbSAndnVlLWNvb2tpZXMnCmltcG9ydCBWdWUgZnJvbSAndnVlJwoKVnVlLnVzZShWdWVDb29raWVzKQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdHb2FsRGFpbHlIYWJpdHMnLApkYXRhKCl7IAogIHJldHVybiB7IAogICAgIGRhaWx5SGFiaXRMaXN0OltdLAogICAgIGRheXNMaXN0OltdLAogICAgIGhhYml0RGF5czpudWxsLAogICAgIGhhYml0UG9pbnRzOjAKICB9Cn0sCiBhc3luYyBjcmVhdGVkICgpIHsKICAgICB2YXIgZGF0ZU5vdyA9IG5ldyBEYXRlKCk7CiAgICAgdmFyIHllYXI9IGRhdGVOb3cuZ2V0RnVsbFllYXIoKTsKICAgICBjb25zb2xlLmxvZyhkYXRlTm93LmdldFRpbWUoKSk7CgogICAgICAgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0Ojg4ODgvYXBpL2hhYml0cycpCiAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhCiAgICAgICAgICAgICB2YXIgaTsgICAKICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwoKICAgICAgICAgICAgZm9yKGk9MDtpPGRhdGEubGVuZ3RoO2krKyl7CiAgICAgICAgICAgICAgICAgIHZhciB0YXNrZGF0ZSA9IG5ldyBEYXRlKGRhdGFbaV0uSGFiaXRFbmREYXRlKTsgICAgICAKICAgICAgICAgICAgICAgICAgaWYodGFza2RhdGUgPj0gZGF0ZU5vdyAmJiBkYXRhW2ldLnRpbWU9PT0iRGFpbHkiKXsKICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYWlseUhhYml0TGlzdC5wdXNoKGRhdGFbaV0pOwogICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICB9ICAgIAogICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5kYXlzTGlzdCkKICAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKQoKfSwKIG1ldGhvZHM6ewogICAgZGF0ZVRvRGF5cyhkYXRlKXsKICAgICAgICB2YXIgZGF0ZU5vdyA9IG5ldyBEYXRlKCk7CiAgICAgICAgdmFyIHRhc2tkYXRlID0gbmV3IERhdGUoZGF0ZSk7CiAgICAgICAgY29uc3Qgb25lRGF5ID0gMjQgKiA2MCAqIDYwICogMTAwMDsgLy8gaG91cnMqbWludXRlcypzZWNvbmRzKm1pbGxpc2Vjb25kcwogICAgICAgIHJldHVybiAgTWF0aC5yb3VuZChNYXRoLmFicygodGFza2RhdGUgLSBkYXRlTm93KSAvIG9uZURheSkpOwogICAgfQp9CgoKfQo="},{"version":3,"sources":["GoalDailyHabits.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"GoalDailyHabits.vue","sourceRoot":"src/components/GoalCycle","sourcesContent":["<template>\n<div class=\"container-fluid\">\n    <div v-for=\"n in dailyHabitList\" class=\"list-group\">\n          <div class=\"list-group-item list-group-item-action\">\n             <div  class=\"d-flex w-100 justify-content-between\">\n               <h6 class=\"mb-1\"> <b>{{n.habit}}</b> </h6>\n               <medium>Check Num: {{n.habitPoints}}</medium>\n               <small>Days: {{dateToDays(n.HabitEndDate)}}</small>\n             </div>\n          </div>     \n    </div>\n</div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport VueCookies from 'vue-cookies'\nimport Vue from 'vue'\n\nVue.use(VueCookies)\n\nexport default {\n  name: 'GoalDailyHabits',\ndata(){ \n  return { \n     dailyHabitList:[],\n     daysList:[],\n     habitDays:null,\n     habitPoints:0\n  }\n},\n async created () {\n     var dateNow = new Date();\n     var year= dateNow.getFullYear();\n     console.log(dateNow.getTime());\n\n       axios.get('http://localhost:8888/api/habits')\n          .then(res => {\n             const data = res.data\n             var i;   \n             console.log(data);\n\n            for(i=0;i<data.length;i++){\n                  var taskdate = new Date(data[i].HabitEndDate);      \n                  if(taskdate >= dateNow && data[i].time===\"Daily\"){\n                     this.dailyHabitList.push(data[i]);\n                  }                  \n             }    \n             console.log(this.daysList)\n         })\n        .catch(error => console.log(error))\n\n},\n methods:{\n    dateToDays(date){\n        var dateNow = new Date();\n        var taskdate = new Date(date);\n        const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        return  Math.round(Math.abs((taskdate - dateNow) / oneDay));\n    }\n}\n\n\n}\n</script>\n\n<style>\n.list-group{\n  color:black;\n\n}\nh6{\n  color:black;\n}\n.mb-1{\n  color:black;\n}\nsmall{\n  color:black;\n}\n.list-group-item{\n  color:black;\n  font-size: 17px;\n}\n</style>\n"]}]}