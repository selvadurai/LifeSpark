{"remainingRequest":"/home/kevin/Projects/LifeSpark/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kevin/Projects/LifeSpark/src/components/Demo/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kevin/Projects/LifeSpark/src/components/Demo/LineChart.vue","mtime":1611287965069},{"path":"/home/kevin/Projects/LifeSpark/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kevin/Projects/LifeSpark/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IExpbmUgfSBmcm9tICd2dWUtY2hhcnRqcycKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBleHRlbmRzOiBMaW5lLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgIGNhc2VsaXN0OltdLAogICAgICAgZGF0ZWxpc3Q6W10sCiAgICAgIGNoYXJ0RGF0YTogewogICAgICAgIGxhYmVsczogJycsCiAgICAgICAgZGF0YXNldHM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbGFiZWw6ICdMaW5lIENoYXJ0JywKICAgICAgICAgICAgZGF0YTogJycsCiAgICAgICAgICAgIGZpbGw6IGZhbHNlLAogICAgICAgICAgICBib3JkZXJDb2xvcjogJyMyNTU0RkYnLAogICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMjU1NEZGJywKICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEKICAgICAgICAgIH0KICAgICAgICBdLAoKICAgIH0KICAgIH0KICB9LAogIGFzeW5jIGNyZWF0ZWQgKCkgewoKICAgIGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkub3BlbmNvdmlkLmNhL3RpbWVzZXJpZXM/c3RhdD1jYXNlcyZsb2M9T04nKQogICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhCiAgICAgICAgICAgdmFyIGk7CiAgICAgICAgCiAgICAgICAgICAgZm9yKGk9MDtpPGRhdGEuY2FzZXMubGVuZ3RoO2krKyl7CiAgICAgICAgICAgICAgdGhpcy5jYXNlbGlzdC5wdXNoKGRhdGEuY2FzZXNbaV0uY2FzZXMpCiAgICAgICAgICAgICAgdGhpcy5kYXRlbGlzdC5wdXNoKGRhdGEuY2FzZXNbaV0uZGF0ZV9yZXBvcnQpCiAgICAgICAgICAgfSAgICAgICAgIAogICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY2hhcnREYXRhLmxhYmVscykgCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY2hhcnREYXRhLmRhdGFzZXRzW2RhdGFdKSAgCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICB0aGlzLmNoYXJ0RGF0YT0gewogICAgICAgICAgIGxhYmVsczogdGhpcy5kYXRlbGlzdCwKICAgICAgICAgICBkYXRhc2V0czogWwogICAgICAgICAgICAgewogICAgICAgICAgICBsYWJlbDogJ0NvdmlkLTE5JywKICAgICAgICAgICAgZGF0YTogdGhpcy5jYXNlbGlzdCwKICAgICAgICAgICAgZmlsbDogZmFsc2UsCiAgICAgICAgICAgIGJvcmRlckNvbG9yOiAnIzI1NTRGRicsCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMyNTU0RkYnLAogICAgICAgICAgICBib3JkZXJXaWR0aDogMQogICAgICAgICAgICAgfQogICAgICAgICAgIF0KICAgICAgICB9CiAgICAgICAgICAKICAgICAgICB0aGlzLnJlbmRlckNoYXJ0KHRoaXMuY2hhcnREYXRhLCB0aGlzLm9wdGlvbnMpCiAgICAgICB9KQogICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKQogIAogIH0sCiAgbW91bnRlZCAoKSB7CiAgICB0aGlzLnJlbmRlckNoYXJ0KHRoaXMuY2hhcnREYXRhLCB0aGlzLm9wdGlvbnMpCiAgfQp9Cg=="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"LineChart.vue","sourceRoot":"src/components/Demo","sourcesContent":["<script>\n  import { Line } from 'vue-chartjs'\n  import axios from 'axios';\n\n  export default {\n    extends: Line,\n    data () {\n      return {\n         caselist:[],\n         datelist:[],\n        chartData: {\n          labels: '',\n          datasets: [\n            {\n              label: 'Line Chart',\n              data: '',\n              fill: false,\n              borderColor: '#2554FF',\n              backgroundColor: '#2554FF',\n              borderWidth: 1\n            }\n          ],\n\n      }\n      }\n    },\n    async created () {\n\n      axios.get('https://api.opencovid.ca/timeseries?stat=cases&loc=ON')\n          .then(res => {\n             const data = res.data\n             var i;\n          \n             for(i=0;i<data.cases.length;i++){\n                this.caselist.push(data.cases[i].cases)\n                this.datelist.push(data.cases[i].date_report)\n             }         \n             console.log(this.chartData.labels) \n              console.log(this.chartData.datasets[data])  \n              \n              \n          this.chartData= {\n             labels: this.datelist,\n             datasets: [\n               {\n              label: 'Covid-19',\n              data: this.caselist,\n              fill: false,\n              borderColor: '#2554FF',\n              backgroundColor: '#2554FF',\n              borderWidth: 1\n               }\n             ]\n          }\n            \n          this.renderChart(this.chartData, this.options)\n         })\n        .catch(error => console.log(error))\n    \n    },\n    mounted () {\n      this.renderChart(this.chartData, this.options)\n    }\n  }\n</script>"]}]}