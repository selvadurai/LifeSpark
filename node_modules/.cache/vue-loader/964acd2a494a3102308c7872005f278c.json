{"remainingRequest":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kevin/Projects/lifesparkv1/src/components/ChartAPI.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/kevin/Projects/lifesparkv1/src/components/ChartAPI.vue","mtime":1609868174766},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNtYWxsIHsKICBtYXgtd2lkdGg6IDYwMHB4OwogIG1hcmdpbjogIDE1MHB4IGF1dG87Cn0K"},{"version":3,"sources":["ChartAPI.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA","file":"ChartAPI.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"small\">\n       <line-chart :chart-data=\"datacollection\"></line-chart> \n       <button @click=\"fillData()\">Generate</button>\n  </div>\n</template>\n\n<script>\n  import LineChart from '@/charts/LineChart.js'\n  import axios from 'axios'\n  \n\n  export default {\n    name: 'Graph',\n    components: {\n      LineChart\n    },\n    data () {\n      return {\n        datacollection: null,\n        caselist:[],\n        datelist:[]      \n      }\n    },\n    mounted() {\n       this.renderChart(this.chartdata)\n    },\n    created () {\n\n      axios.get('https://api.opencovid.ca/timeseries?stat=cases&loc=ON')\n          .then(res => {\n             const data = res.data\n             var i;\n          \n             for(i=0;i<data.cases.length;i++){\n                this.caselist.push(data.cases[i].cases)\n                this.datelist.push(data.cases[i].date_report)\n             }         \n             \n         })\n        .catch(error => console.log(error)),\n\n        this.datacollection = {\n           labels:this.datelist,\n           datasets: [\n             {\n               label: 'Covid-19',\n               backgroundColor: '#f87979',\n               data:this.caselist\n             }\n          ]\n        }\n    },\n    methods: {\n      fillData () {\n        this.datacollection = {\n          labels: this.datelist,\n          datasets: [\n            {\n              label: 'Data One',\n              backgroundColor: '#f87979',\n              data: this.caselist\n            }\n          ]\n        }\n        \n      }\n   \n    }\n  \n  }\n  \n</script>\n\n<style>\n  .small {\n    max-width: 600px;\n    margin:  150px auto;\n  }\n</style>\n"]}]}