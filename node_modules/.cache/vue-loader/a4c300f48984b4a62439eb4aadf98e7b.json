{"remainingRequest":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kevin/Projects/lifesparkv1/src/components/GoalCycle/GoalStats.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/kevin/Projects/lifesparkv1/src/components/GoalCycle/GoalStats.vue","mtime":1610686173821},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGlzdC1ncm91cHsKICBjb2xvcjpibGFjazsKCn0KaDZ7CiAgY29sb3I6YmxhY2s7Cn0KLm1iLTF7CiAgY29sb3I6YmxhY2s7Cn0Kc21hbGx7CiAgY29sb3I6YmxhY2s7Cn0KLmxpc3QtZ3JvdXAtaXRlbXsKICBjb2xvcjpibGFjazsKICBmb250LXNpemU6IDE3cHg7Cn0KCg=="},{"version":3,"sources":["GoalStats.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GoalStats.vue","sourceRoot":"src/components/GoalCycle","sourcesContent":["<template>\n<div class=\"container-fluid\">\n \n <form @submit=\"loadGoal()\">\n     <span>View Goal Cyle: </span> \n      <select  v-model=\"goalRef\">\n          <option value=\"\">Goal Update</option>  \n          <option v-for=\"n in goalList\">{{n.title}}</option>  \n      </select>\n         <br>\n        <input type=\"submit\" value=\"Load Goal\" >\n       \n  </form>  \n\n  <br>\n\n  <!-- Content Column -->\n  <div class=\"col\">\n\n  <!-- Project Card Example -->\n  <div class=\"card shadow mb-4\">\n      <div class=\"card-header py-3\">\n          <h6 class=\"m-0 font-weight-bold text-primary\">Goal Cycle</h6>\n       </div>\n                                \n       <div class=\"card-body\">\n            <h4 class=\"small font-weight-bold\">Steps Completed <span class=\"float-right\">{{this.stepsPercentage}}%</span></h4>\n                    <div class=\"progress mb-4\">\n                      <div class=\"progress-bar bg-danger\" role=\"progressbar\" :style=\"this.stepsBarProgress\"\n                           :aria-valuenow=\"this.stepsPercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n     </div>\n             \n             \n             \n   </div>\n</div>\n\n\n\n     \n\n\n\n  \n\n</template>\n\n<script>\nimport axios from 'axios'\nimport VueCookies from 'vue-cookies'\nimport Vue from 'vue'\n\nVue.use(VueCookies)\n\nexport default {\n  name: 'GoalCheckList',\ndata(){ \n  return { \n     stepList:[], \n     goalRef:null,\n     goalList:[],\n     goalId:'',\n     updateStatus:'',\n     points:null,\n     stepsTotal:0,\n     stepsCompleted:0,\n     stepsPercentage:0,\n     stepsBarProgress:'',\n\n     dailyHabitList:[],\n     daysList:[],\n     habitDays:null,\n     habitPoints:0\n   }\n},\n async created () {\n     var dateNow = new Date();\n     var year= dateNow.getFullYear();\n     console.log(dateNow.getTime());\n\n       axios.get('http://localhost:8888/api/goals')\n          .then(res => {\n             const data = res.data\n             var i;\n\n             var dateNow = new Date()\n             var year= dateNow.getFullYear()\n             console.log(data);\n                          \n             for(i=0;i<data.length;i++){\n                  if(data[i].year===year)\n                     this.goalList.push(data[i])\n             }       \n             \n         })\n        .catch(error => console.log(error));\n\n\n\n\n    \n},\n methods:{\n   async loadGoal(){    \n            var i;\n        \n            for(i=0;i<this.goalList.length;i++){\n                  if(this.goalList[i].title===this.goalRef)\n                    this.goalId=this.goalList[i]._id\n             }\n         // Gets Steps Stats      \n         axios.get('http://localhost:8888/api/goals/steps')\n          .then(res => {\n             const data = res.data\n             var i;\n                          \n             for(i=0;i<data.length;i++){\n                  if(data[i].goalID===this.goalId){\n                     this.stepList.push(data[i])\n                     if(data[i].check==true){\n                      this.stepsCompleted=+this.stepsCompleted + 1;\n                     } \n                       \n                  }\n             }       \n             \n            this.stepsPercentage=Math.round ( (this.stepsCompleted/this.stepList.length)*100 );\n            \n            this.stepsBarProgress=\"width:\"+this.stepsPercentage+\"%\"\n\n         })\n        .catch(error => console.log(error))\n\n\n        axios.get('http://localhost:8888/api/habits')\n          .then(res => {\n             const data = res.data\n             var i;   \n\n            for(i=0;i<data.length;i++){\n                  var taskdate = new Date(data[i].HabitEndDate);      \n                  if(data[i].goalID===this.goalId){\n                     this.dailyHabitList.push(data[i]);\n                  }                  \n             }    \n         })\n        .catch(error => console.log(error));\n\n\n    },\n      taskDate(date){\n        var dateNow = new Date();\n        var taskdate = new Date(date);\n        const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        return  Math.round(Math.abs((taskdate)  / oneDay)      ) ;\n    }\n\n\n }   \n}\n</script>\n\n<style>\n.list-group{\n  color:black;\n\n}\nh6{\n  color:black;\n}\n.mb-1{\n  color:black;\n}\nsmall{\n  color:black;\n}\n.list-group-item{\n  color:black;\n  font-size: 17px;\n}\n\n</style>\n"]}]}