{"remainingRequest":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kevin/Projects/lifesparkv1/src/components/GoalCycle/GoalStats.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kevin/Projects/lifesparkv1/src/components/GoalCycle/GoalStats.vue","mtime":1611282153172},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kevin/Projects/lifesparkv1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IFZ1ZUNvb2tpZXMgZnJvbSAndnVlLWNvb2tpZXMnCmltcG9ydCBWdWUgZnJvbSAndnVlJwoKLy9HZXQgQ29va2llcwpWdWUudXNlKFZ1ZUNvb2tpZXMpCgpleHBvcnQgZGVmYXVsdCB7CiBuYW1lOiAnR29hbENoZWNrTGlzdCcsCgpkYXRhKCl7IAogIHJldHVybiB7IAogICAgIHN0ZXBMaXN0OltdLCAKICAgICBnb2FsUmVmOm51bGwsCiAgICAgZ29hbExpc3Q6W10sCiAgICAgZ29hbElkOicnLAogICAgIHVwZGF0ZVN0YXR1czonJywKICAgICBwb2ludHM6bnVsbCwKICAgICBzdGVwc1RvdGFsOjAsCiAgICAgc3RlcHNDb21wbGV0ZWQ6MCwKICAgICBzdGVwc1BlcmNlbnRhZ2U6MCwKICAgICBzdGVwc0JhclByb2dyZXNzOicnLAoKICAgICBkYWlseUhhYml0TGlzdDpbXSwKICAgICBkYXlzTGlzdDpbXSwKICAgICBoYWJpdERheXM6bnVsbCwKICAgICBoYWJpdFBvaW50czowLAoKICAgICBub3Rlc0xpc3Q6W10sCiAgICAgbWVhc3VyZWFibGU6ZmFsc2UsCgogICAgIGdvYWxDdXI6JycsCiAgICAgZ29hbEVuZDonJywKICAgICBnb2FsQ3VySHRtbDonJywKICAgICBnb2FsUGVyY2VudGFnZTowCgogICB9Cn0sCiBhc3luYyBjcmVhdGVkICgpIHsKICAgICB2YXIgZGF0ZU5vdyA9IG5ldyBEYXRlKCk7CiAgICAgdmFyIHllYXI9IGRhdGVOb3cuZ2V0RnVsbFllYXIoKTsKCiAgICAgIC8vR2V0IEdvYWxzIEZyb20gQVBJCiAgICAgIGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4ODg4L2FwaS9nb2FscycpCiAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgLy9kYXRhIHJlYWRzIGZyb20gYXBpIAogICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhCiAgICAgICAgICAgICB2YXIgaTsKCiAgICAgICAgICAgICAvL0dldCBEYXRlCiAgICAgICAgICAgICB2YXIgZGF0ZU5vdyA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgIHZhciB5ZWFyPSBkYXRlTm93LmdldEZ1bGxZZWFyKCkKICAgICAgICAgICAgIAogICAgICAgICAgICAgLy9HZXQgR29hbHMgUmVmZXJlbmNpbmcgdGhpcyBZZWFyICAgICAgICAgICAgICAKICAgICAgICAgICAgIGZvcihpPTA7aTxkYXRhLmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgICBpZihkYXRhW2ldLnllYXI9PT15ZWFyKQogICAgICAgICAgICAgICAgICAgICB0aGlzLmdvYWxMaXN0LnB1c2goZGF0YVtpXSkKICAgICAgICAgICAgIH0gICAgICAgCiAgICAgICAgICAgICAKICAgICAgfSkKICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSk7CiAgICAKfSwKIG1ldGhvZHM6ewogICAvL1RoaXMgRnVuY3Rpb24gTG9hZHMgR29hbCBpbnRvIHRoZSBmb3J1bSAKICAgYXN5bmMgbG9hZEdvYWwoKXsgICAgCiAgICAgICAgICAgIHZhciBpOwoKICAgICAgICAgICAgLy9HZXQgYWxsIEdvYWwgZGF0YSBhbmQgc2V0IGdvYWwgcHJvZ3Jlc3Mgb24gYmFyCiAgICAgICAgICAgIGZvcihpPTA7aTx0aGlzLmdvYWxMaXN0Lmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgICBpZih0aGlzLmdvYWxMaXN0W2ldLnRpdGxlPT09dGhpcy5nb2FsUmVmKXsKICAgICAgICAgICAgICAgICAgICB0aGlzLmdvYWxJZD10aGlzLmdvYWxMaXN0W2ldLl9pZAogICAgICAgICAgICAgICAgICAgIHRoaXMubWVhc3VyZWFibGU9dGhpcy5nb2FsTGlzdFtpXS5tZWFzdXJlYWJsZQogICAgICAgICAgICAgICAgICAgIHRoaXMuZ29hbEN1cj10aGlzLmdvYWxMaXN0W2ldLmN1ck51bQogICAgICAgICAgICAgICAgICAgIHRoaXMuZ29hbEVuZD10aGlzLmdvYWxMaXN0W2ldLmVuZE51bQoKICAgICAgICAgICAgICAgICAgICAvL1NldHMgZ29hbCBwcm9ncmVzcwogICAgICAgICAgICAgICAgICAgIHRoaXMuZ29hbFBlcmNlbnRhZ2U9TWF0aC5yb3VuZCAoICh0aGlzLmdvYWxDdXIvdGhpcy5nb2FsRW5kKSoxMDAgKTsKICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgLy9Mb2FkIHRvIEh0bWwgUHJvZ3Jlc3MgQmFyCiAgICAgICAgICAgICAgICAgICAgdGhpcy5nb2FsQ3VySHRtbD0id2lkdGg6Iit0aGlzLmdvYWxQZXJjZW50YWdlKyIlIgoKICAgICAgICAgICAgICAgICAgICAvL09uY2UgZm91bmQgZXhpdCBsb29wICAKICAgICAgICAgICAgICAgICAgICBpPXRoaXMuZ29hbExpc3QubGVuZ3RoOwogICAgICAgICAgICAgICAgIH0gIAoKICAgICAgICAgICAgfQoKICAgICAgICAgLy8qKioqKioqKioqKioqKioqR0VUIFNURVBTKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqLwogICAgICAgICAvLyBHZXRzIFN0ZXBzIFN0YXRzICAgICAgCiAgICAgICAgIGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4ODg4L2FwaS9nb2Fscy9zdGVwcycpCiAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgLy9yZWFkcyBmcm9tIGRhdGEgYXBpCiAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGEKICAgICAgICAgICAgIHZhciBpOwogICAgICAgICAgICAgLy9HZXQgdGhlIHN0ZXBzIHJlbGF0ZWQgbyB0aGUgZ29hbCAgICAgICAgICAgICAKICAgICAgICAgICAgIGZvcihpPTA7aTxkYXRhLmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgICBpZihkYXRhW2ldLmdvYWxJRD09PXRoaXMuZ29hbElkKXsKICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGVwTGlzdC5wdXNoKGRhdGFbaV0pCiAgICAgICAgICAgICAgICAgICAgIGlmKGRhdGFbaV0uY2hlY2s9PXRydWUpewogICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGVwc0NvbXBsZXRlZD0rdGhpcy5zdGVwc0NvbXBsZXRlZCArIDE7CiAgICAgICAgICAgICAgICAgICAgIH0gCiAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgIH0gICAgICAgCiAgICAgICAgICAgICAKICAgICAgICAgICAgIC8vQ29udmVydCBzdGVwcyB0byBwZXJjZW50YWdlCiAgICAgICAgICAgIHRoaXMuc3RlcHNQZXJjZW50YWdlPU1hdGgucm91bmQgKCAodGhpcy5zdGVwc0NvbXBsZXRlZC90aGlzLnN0ZXBMaXN0Lmxlbmd0aCkqMTAwICk7CiAgICAgICAgICAgIC8vVXNlZCBpbiBQcm9ncmVzcyBiYXIKICAgICAgICAgICAgdGhpcy5zdGVwc0JhclByb2dyZXNzPSJ3aWR0aDoiK3RoaXMuc3RlcHNQZXJjZW50YWdlKyIlIgoKICAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKQogICAgICAvLyoqKioqKioqKioqKioqKioqKioqKkVORCBPRiBTVEVQUyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCiAgICAgICAvLyoqKioqKioqKioqKioqKioqR0VUIEdPQUxTIFJFTEFURUQgVE8gSEFCSVRTKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKi8KCiAgICAgICAgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0Ojg4ODgvYXBpL2hhYml0cycpCiAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhCiAgICAgICAgICAgICB2YXIgaTsgICAKCiAgICAgICAgICAgIGZvcihpPTA7aTxkYXRhLmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgICB2YXIgdGFza2RhdGUgPSBuZXcgRGF0ZShkYXRhW2ldLkhhYml0RW5kRGF0ZSk7IAogICAgICAgICAgICAgICAgICAvL1JlZmVyZW5jZSBoYWJpdHMgcmVsYXRlZCB0byBnb2FscyAgICAgCiAgICAgICAgICAgICAgICAgIGlmKGRhdGFbaV0uZ29hbElEPT09dGhpcy5nb2FsSWQpewogICAgICAgICAgICAgICAgICAgICB0aGlzLmRhaWx5SGFiaXRMaXN0LnB1c2goZGF0YVtpXSk7CiAgICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgIH0gICAgCiAgICAgICAgIH0pCiAgICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSk7CiAgICAgLy8qKioqKioqKioqKioqKioqKioqKipFTkQgT0YgSEFCSVRTKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovCgogICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqR0VUIEdPQUwgTk9URVMqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogICAgICAgICBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODg4OC9hcGkvZ29hbHMvbm90ZXMnKQogICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXMuZGF0YQogICAgICAgICAgICAgdmFyIGk7ICAgCgogICAgICAgICAgICBmb3IoaT0wO2k8ZGF0YS5sZW5ndGg7aSsrKXsKCiAgICAgICAgICAgICAgICAgIGlmKGRhdGFbaV0uZ29hbElkPT09dGhpcy5nb2FsSWQpewogICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGVzTGlzdC5wdXNoKGRhdGFbaV0pOwogICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICB9ICAgIAogICAgICAgICB9KQogICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpOwogICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqRU5EIEdPQUwgTk9URVMqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqLwoKICAgIH0sCiAgICAgIAogICAgIGRhdGVUb0RheXMoZGF0ZSl7CiAgICAgICAgdmFyIGRhdGVOb3cgPSBuZXcgRGF0ZSgpOwogICAgICAgIHZhciB0YXNrZGF0ZSA9IG5ldyBEYXRlKGRhdGUpOwogICAgICAgIGNvbnN0IG9uZURheSA9IDI0ICogNjAgKiA2MCAqIDEwMDA7IC8vIGhvdXJzKm1pbnV0ZXMqc2Vjb25kcyptaWxsaXNlY29uZHMKICAgICAgICByZXR1cm4gIE1hdGgucm91bmQoTWF0aC5hYnMoKHRhc2tkYXRlIC0gZGF0ZU5vdykgLyBvbmVEYXkpKTsKICAgIH0KCiB9ICAgCn0K"},{"version":3,"sources":["GoalStats.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"GoalStats.vue","sourceRoot":"src/components/GoalCycle","sourcesContent":["<template>\n<div class=\"container-fluid\">\n \n\n<!--Load Goal You Want To View-->\n <form @submit=\"loadGoal()\">\n     <span>View Goal Cyle: </span> \n      <select  v-model=\"goalRef\">\n          <option value=\"\">Goal Update</option>  \n          <option v-for=\"n in goalList\">{{n.title}}</option>  \n      </select>\n         <br>\n        <input type=\"submit\" value=\"Load Goal\" >\n       \n  </form>  \n <!--End Load Goal -->\n\n\n  <br>\n\n   <h2>{{this.goalRef}}</h2>\n    <br>\n\n\n<!--If the current goalCur<Goal end time then load goal progress bar -->\n <!--GOAL PROGRESS BAR -->  \n<div v-if=\"parseInt(this.goalEnd)>parseInt(this.goalCur)\" > \n\n<!-- Content Column -->\n  <div class=\"col\">\n  <!-- Project Card Example -->\n  <div class=\"card shadow mb-4\">\n      <div class=\"card-header py-3\">\n          <h6 class=\"m-0 font-weight-bold text-primary\">Progress</h6>\n       </div>\n                                \n       <div class=\"card-body\">\n            <h4 class=\"small font-weight-bold\">Progress {{this.goalCur}} <span class=\"float-right\">{{this.goalEnd}}</span></h4>\n                    <div class=\"progress mb-4\">\n                      <div class=\"progress-bar bg-danger\" role=\"progressbar\" :style=\"this.goalCurHtml\"\n                           :aria-valuenow=\"this.goalCur\" :aria-valuemin=\"0\" :aria-valuemax=\"this.goalEnd\"></div>\n                      </div>\n     </div>     \n   </div>\n</div>\n\n</div>\n <!--END GOAL PROGRESS BAR -->  \n\n\n<!--STEPS BAR-->\n  <!-- Content Column -->\n<div class=\"col\">\n\n  <!-- Project Card Example -->\n  <div class=\"card shadow mb-4\">\n      <div class=\"card-header py-3\">\n          <h6 class=\"m-0 font-weight-bold text-primary\">Goal Cycle</h6>\n       </div>\n                                \n       <div class=\"card-body\">\n            <h4 class=\"small font-weight-bold\">Steps Completed <span class=\"float-right\">{{this.stepsPercentage}}%</span></h4>\n                    <div class=\"progress mb-4\">\n                      <div class=\"progress-bar bg-danger\" role=\"progressbar\" :style=\"this.stepsBarProgress\"\n                           :aria-valuenow=\"this.stepsPercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n      </div>\n                      \n   </div>\n\n</div>\n<!--END OF STEPS BAR-->\n\n\n<!--HABITS RELATED TO GOALS-->\n<h3>Habits Related to Goal</h3>\n<div v-for=\"n in dailyHabitList\" class=\"list-group\">\n          <div class=\"list-group-item list-group-item-action\">\n             <div  class=\"d-flex w-100 justify-content-between\">\n               <h6 class=\"mb-1\"> <b>{{n.habit}}</b> </h6>\n               <medium>Check Num: {{n.habitPoints}}</medium>\n               <small>Days: {{dateToDays(n.HabitEndDate)}}</small>\n             </div>\n          </div>     \n</div>\n<!--HABITS RELATED TO GOALS-->\n\n\n\n<br>\n<br>\n\n<!--Load Goal Notes-->\n<h3>Goal Notes</h3>\n<div v-for=\"n in notesList\" class=\"list-group\">\n      <div class=\"list-group-item list-group-item-action\">\n            <small>{{n.date}}</small>\n            <br>\n             <textarea cols=\"50\" rows=\"5\">\n                {{n.note}} \n             </textarea>\n      </div>\n</div>     \n<!--End of Goal Notes -->\n\n<!--End of Template-->\n</div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport VueCookies from 'vue-cookies'\nimport Vue from 'vue'\n\n//Get Cookies\nVue.use(VueCookies)\n\nexport default {\n name: 'GoalCheckList',\n\ndata(){ \n  return { \n     stepList:[], \n     goalRef:null,\n     goalList:[],\n     goalId:'',\n     updateStatus:'',\n     points:null,\n     stepsTotal:0,\n     stepsCompleted:0,\n     stepsPercentage:0,\n     stepsBarProgress:'',\n\n     dailyHabitList:[],\n     daysList:[],\n     habitDays:null,\n     habitPoints:0,\n\n     notesList:[],\n     measureable:false,\n\n     goalCur:'',\n     goalEnd:'',\n     goalCurHtml:'',\n     goalPercentage:0\n\n   }\n},\n async created () {\n     var dateNow = new Date();\n     var year= dateNow.getFullYear();\n\n      //Get Goals From API\n      axios.get('http://localhost:8888/api/goals')\n          .then(res => {\n             //data reads from api \n             const data = res.data\n             var i;\n\n             //Get Date\n             var dateNow = new Date()\n             var year= dateNow.getFullYear()\n             \n             //Get Goals Referencing this Year              \n             for(i=0;i<data.length;i++){\n                  if(data[i].year===year)\n                     this.goalList.push(data[i])\n             }       \n             \n      })\n      .catch(error => console.log(error));\n    \n},\n methods:{\n   //This Function Loads Goal into the forum \n   async loadGoal(){    \n            var i;\n\n            //Get all Goal data and set goal progress on bar\n            for(i=0;i<this.goalList.length;i++){\n                  if(this.goalList[i].title===this.goalRef){\n                    this.goalId=this.goalList[i]._id\n                    this.measureable=this.goalList[i].measureable\n                    this.goalCur=this.goalList[i].curNum\n                    this.goalEnd=this.goalList[i].endNum\n\n                    //Sets goal progress\n                    this.goalPercentage=Math.round ( (this.goalCur/this.goalEnd)*100 );\n                   \n                   //Load to Html Progress Bar\n                    this.goalCurHtml=\"width:\"+this.goalPercentage+\"%\"\n\n                    //Once found exit loop  \n                    i=this.goalList.length;\n                 }  \n\n            }\n\n         //****************GET STEPS************************************* */\n         // Gets Steps Stats      \n         axios.get('http://localhost:8888/api/goals/steps')\n          .then(res => {\n             //reads from data api\n             const data = res.data\n             var i;\n             //Get the steps related o the goal             \n             for(i=0;i<data.length;i++){\n                  if(data[i].goalID===this.goalId){\n                     this.stepList.push(data[i])\n                     if(data[i].check==true){\n                      this.stepsCompleted=+this.stepsCompleted + 1;\n                     } \n                       \n                  }\n             }       \n             \n             //Convert steps to percentage\n            this.stepsPercentage=Math.round ( (this.stepsCompleted/this.stepList.length)*100 );\n            //Used in Progress bar\n            this.stepsBarProgress=\"width:\"+this.stepsPercentage+\"%\"\n\n         })\n        .catch(error => console.log(error))\n      //*********************END OF STEPS******************************************************************/\n\n       //*****************GET GOALS RELATED TO HABITS*********************************************** */\n\n        axios.get('http://localhost:8888/api/habits')\n          .then(res => {\n             const data = res.data\n             var i;   \n\n            for(i=0;i<data.length;i++){\n                  var taskdate = new Date(data[i].HabitEndDate); \n                  //Reference habits related to goals     \n                  if(data[i].goalID===this.goalId){\n                     this.dailyHabitList.push(data[i]);\n                  }                  \n             }    \n         })\n        .catch(error => console.log(error));\n     //*********************END OF HABITS****************************************************************** */\n\n    /*****************************GET GOAL NOTES****************************************************************/\n         axios.get('http://localhost:8888/api/goals/notes')\n          .then(res => {\n             const data = res.data\n             var i;   \n\n            for(i=0;i<data.length;i++){\n\n                  if(data[i].goalId===this.goalId){\n                     this.notesList.push(data[i]);\n                  }                  \n             }    \n         })\n        .catch(error => console.log(error));\n    /**************************END GOAL NOTES******************************************************************** */\n\n    },\n      \n     dateToDays(date){\n        var dateNow = new Date();\n        var taskdate = new Date(date);\n        const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        return  Math.round(Math.abs((taskdate - dateNow) / oneDay));\n    }\n\n }   \n}\n</script>\n\n<style>\n.list-group{\n  color:black;\n\n}\nh6{\n  color:black;\n}\n.mb-1{\n  color:black;\n}\nsmall{\n  color:black;\n}\n.list-group-item{\n  color:black;\n  font-size: 17px;\n}\n\n</style>\n"]}]}